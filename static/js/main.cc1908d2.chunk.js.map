{"version":3,"sources":["reportWebVitals.ts","redux/characters.tsx","redux/store.tsx","components/QuestProgress.tsx","components/RaidProgress.tsx","model/character.tsx","components/MythicPlusProgress.tsx","model/vault.tsx","components/VaultRewards.tsx","model/region.tsx","components/CharacterProgress.tsx","components/Navigation.tsx","components/AddCharacter.tsx","components/CharacterSelect.tsx","components/Sidebar.tsx","components/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","charactersAdapter","createEntityAdapter","initialState","getInitialState","current","nextId","characters","createSlice","name","reducers","addCharacter","state","action","id","addOne","progress","mythicPlus","raid","lfr","normal","heroic","mythic","weeklyAnima","weeklyMawSouls","weeklyVenari","weeklyBonusEvent","worldBoss","payload","addMythicPlusDungeonRun","getProgress","push","chooseCharacter","deleteAllData","removeAll","deleteMythicPlusDungeonRun","splice","resetAllCharacters","Object","values","entities","forEach","character","resetProgress","resetCurrentCharacter","setRaidLFR","setRaidNormal","setRaidHeroic","setRaidMythic","toggleWeeklyAnima","toggleWeeklyVenari","toggleWeeklyMawSouls","toggleWeeklyBonusEvent","toggleWorldBoss","getSelectors","selectAllCharacters","selectAll","selectCharacterById","selectById","selectCurrentCharacter","selectProgress","actions","resetCharacter","storedState","localStorage","getItem","JSON","parse","store","configureStore","reducer","schema","version","charactersReducer","preloadedState","useAppDispatch","useDispatch","subscribe","setItem","stringify","getState","QuestProgress","dispatch","Form","Check","label","checked","onChange","RaidProgress","raidProgress","max","handleChange","inputValue","currentValue","callback","value","parseInt","isNaN","Group","controlId","Label","Control","type","min","e","target","shadowlandsDungeons","MythicPlusProgress","useState","dungeon","setDungeon","level","setLevel","addingNewRun","setAddingNewRun","heading","tip","className","length","onSubmit","preventDefault","alert","as","map","d","Button","variant","onClick","mythicPlusRuns","run","index","size","window","confirm","rewards","priorities","2","3","4","5","6","7","8","9","10","11","12","13","14","15","maxKeyLevel","maxItemLevel","raidDifficultyNames","VaultRewards","useSelector","raidItemLevel","n","difficulty","find","mythicPlusSorted","sort","a","b","mythicPlusItemLevel","keyLevel","rewardLevel","raid3","raid6","raid9","mythicPlus1","mythicPlus4","mythicPlus10","defaultClassNames","successClass","raid3ClassNames","raid6ClassNames","raid9ClassNames","mythicPlus1ClassNames","mythicPlus4ClassNames","mythicPlus10ClassNames","regions","us","short","long","eu","kr","tw","cn","CharacterProgress","Container","fluid","Row","Col","realm","region","sm","Navigation","Navbar","bg","Brand","AddCharacter","charactersExist","setAddingNewCharacter","setName","setRealm","setRegion","keys","regionCode","CharacterSelect","currentCharacter","charactersContent","characterSelect","Error","Sidebar","addingNewCharacter","block","App","xl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc1908d2.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { EntityState, PayloadAction, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"./store\";\nimport { Character, MythicPlus, Progress } from \"../model/character\";\n\nconst charactersAdapter = createEntityAdapter<Character>();\n\ninterface CharactersState extends EntityState<Character> {\n  current: number | null,\n  nextId: number,\n}\n\nconst initialState = charactersAdapter.getInitialState({\n  current: null,\n  nextId: 1,\n} as CharactersState);\n\nconst characters = createSlice({\n  name: \"characters\",\n  initialState,\n  reducers: {\n    addCharacter(state, action) {\n      const id = state.nextId;\n\n      charactersAdapter.addOne(state, {\n        id,\n        progress: {\n          mythicPlus: [],\n          raid: {\n            lfr: 0,\n            normal: 0,\n            heroic: 0,\n            mythic: 0,\n          },\n          weeklyAnima: false,\n          weeklyMawSouls: false,\n          weeklyVenari: false,\n          weeklyBonusEvent: false,\n          worldBoss: false,\n        },\n        ...action.payload\n      });\n\n      state.nextId++;\n\n      state.current = id;\n    },\n    addMythicPlusDungeonRun(state, action: PayloadAction<MythicPlus>) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.mythicPlus.push(action.payload);\n      }\n    },\n    chooseCharacter(state, action: PayloadAction<number>) {\n      state.current = action.payload;\n    },\n    deleteAllData(state) {\n      charactersAdapter.removeAll(state);\n      state.current = null;\n      state.nextId = 1;\n    },\n    deleteMythicPlusDungeonRun(state, action: PayloadAction<number>) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.mythicPlus.splice(action.payload, 1);\n      }\n    },\n    resetAllCharacters(state) {\n      Object.values(state.entities).forEach((character) => {\n        if (character) {\n          resetProgress(character.progress)\n        }\n      });\n    },\n    resetCurrentCharacter(state) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        resetProgress(progress);\n      }\n    },\n    setRaidLFR(state, action: PayloadAction<number>) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.raid.lfr = action.payload;\n      }\n    },\n    setRaidNormal(state, action: PayloadAction<number>) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.raid.normal = action.payload;\n      }\n    },\n    setRaidHeroic(state, action: PayloadAction<number>) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.raid.heroic = action.payload;\n      }\n    },\n    setRaidMythic(state, action: PayloadAction<number>) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.raid.mythic = action.payload;\n      }\n    },\n    toggleWeeklyAnima(state) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.weeklyAnima = !progress.weeklyAnima;\n      }\n    },\n    toggleWeeklyVenari(state) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.weeklyVenari = !progress.weeklyVenari;\n      }\n    },\n    toggleWeeklyMawSouls(state) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.weeklyMawSouls = !progress.weeklyMawSouls;\n      }\n    },\n    toggleWeeklyBonusEvent(state) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.weeklyBonusEvent = !progress.weeklyBonusEvent;\n      }\n    },\n    toggleWorldBoss(state) {\n      const progress = getProgress(state);\n\n      if (progress) {\n        progress.worldBoss = !progress.worldBoss;\n      }\n    }\n  },\n});\n\nfunction getProgress(state: CharactersState) {\n  const current = state.current;\n\n  if (current) {\n    const character = state.entities[current];\n\n    if (character) {\n      return character.progress;\n    }\n  }\n}\n\nfunction resetProgress(progress: Progress) {\n  progress.mythicPlus = [];\n  progress.raid = {\n    lfr: 0,\n    normal: 0,\n    heroic: 0,\n    mythic: 0,\n  };\n  progress.weeklyAnima = false;\n  progress.weeklyMawSouls = false;\n  progress.weeklyVenari = false;\n  progress.weeklyBonusEvent = false;\n  progress.worldBoss = false;\n}\n\nexport const {\n  selectAll: selectAllCharacters,\n  selectById: selectCharacterById,\n} = charactersAdapter.getSelectors((state: RootState) => state.characters);\n\nexport function selectCurrentCharacter(state: RootState) {\n  const current = state.characters.current;\n\n  if (current) {\n    return selectCharacterById(state, current);\n  }\n}\n\nexport function selectProgress(state: RootState) {\n  const current = selectCurrentCharacter(state);\n\n  if (current) {\n    return current.progress;\n  }\n}\n\nexport const {\n  addCharacter,\n  addMythicPlusDungeonRun,\n  chooseCharacter,\n  deleteAllData,\n  deleteMythicPlusDungeonRun,\n  resetAllCharacters,\n  resetCurrentCharacter: resetCharacter,\n  setRaidLFR,\n  setRaidNormal,\n  setRaidHeroic,\n  setRaidMythic,\n  toggleWeeklyAnima,\n  toggleWeeklyMawSouls,\n  toggleWeeklyVenari,\n  toggleWeeklyBonusEvent,\n  toggleWorldBoss,\n} = characters.actions;\n\nexport default characters.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport { useDispatch } from \"react-redux\";\n\nimport charactersReducer from \"./characters\";\n\nconst storedState = localStorage.getItem(\"state\");\n\nconst initialState = storedState ? JSON.parse(storedState) : {};\n\nconst store = configureStore({\n  reducer: {\n    schema: () => {\n      return {\n        version: 1,\n      }\n    },\n    characters: charactersReducer,\n  },\n  preloadedState: initialState,\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"state\", JSON.stringify(store.getState()));\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport function useAppDispatch() {\n  return useDispatch<AppDispatch>();\n}\n\nexport default store;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { useAppDispatch } from \"../redux/store\";\nimport {\n  toggleWeeklyAnima,\n  toggleWeeklyMawSouls,\n  toggleWeeklyVenari,\n  toggleWeeklyBonusEvent,\n  toggleWorldBoss,\n} from \"../redux/characters\";\nimport { Progress } from \"../model/character\";\n\ninterface Props {\n  progress: Progress,\n}\n\nexport default function QuestProgress({ progress }: Props) {\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <h4>Quests</h4>\n\n      <Form>\n        <Form.Check\n          label=\"World boss\"\n          name=\"worldBoss\"\n          checked={progress.worldBoss}\n          onChange={() => dispatch(toggleWorldBoss())}\n        />\n        <Form.Check\n          label=\"Weekly anima quest\"\n          name=\"weeklyAnima\"\n          checked={progress.weeklyAnima}\n          onChange={() => dispatch(toggleWeeklyAnima())}\n        />\n        <Form.Check\n          label=\"Weekly Maw souls quest\"\n          name=\"weeklyMawSouls\"\n          checked={progress.weeklyMawSouls}\n          onChange={() => dispatch(toggleWeeklyMawSouls())}\n        />\n        <Form.Check\n          label=\"Weekly Ve'nari quests\"\n          name=\"weeklyVenari\"\n          checked={progress.weeklyVenari}\n          onChange={() => dispatch(toggleWeeklyVenari())}\n        />\n        <Form.Check\n          label=\"Weekly bonus event quest\"\n          name=\"weeklyBonusEvent\"\n          checked={progress.weeklyBonusEvent}\n          onChange={() => dispatch(toggleWeeklyBonusEvent())}\n        />\n      </Form>\n    </>\n  );\n}\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { useAppDispatch } from \"../redux/store\";\nimport {\n  setRaidLFR,\n  setRaidNormal,\n  setRaidHeroic,\n  setRaidMythic,\n} from \"../redux/characters\";\nimport { Progress } from \"../model/character\";\n\ninterface Props {\n  progress: Progress,\n}\n\nexport default function RaidProgress({ progress }: Props) {\n  const dispatch = useAppDispatch();\n  const raidProgress = progress.raid;\n  const min = 0;\n  const max = 10;\n\n  function handleChange(inputValue: string, currentValue: number, callback: Function) {\n    let value = parseInt(inputValue, 10);\n\n    if (isNaN(value)) {\n      return dispatch(callback(currentValue));\n    } else if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n\n    dispatch(callback(value));\n  }\n\n  return (\n    <>\n      <h4>Raid: Castle Nathria</h4>\n\n      <Form>\n        <Form.Group controlId=\"raidLFR\">\n          <Form.Label>Looking For Raid bosses defeated</Form.Label>\n          <Form.Control type=\"number\" min={min} max={max} value={raidProgress.lfr} onChange={(e) => handleChange(e.target.value, raidProgress.lfr, setRaidLFR)} />\n        </Form.Group>\n        <Form.Group controlId=\"raidNormal\">\n          <Form.Label>Normal bosses defeated</Form.Label>\n          <Form.Control type=\"number\" min={min} max={max} value={raidProgress.normal} onChange={(e) => handleChange(e.target.value, raidProgress.normal, setRaidNormal)} />\n        </Form.Group>\n        <Form.Group controlId=\"raidHeroic\">\n          <Form.Label>Heroic bosses defeated</Form.Label>\n          <Form.Control type=\"number\" min={min} max={max} value={raidProgress.heroic} onChange={(e) => handleChange(e.target.value, raidProgress.heroic, setRaidHeroic)} />\n        </Form.Group>\n        <Form.Group controlId=\"raidMythic\">\n          <Form.Label>Mythic bosses defeated</Form.Label>\n          <Form.Control type=\"number\" min={min} max={max} value={raidProgress.mythic} onChange={(e) => handleChange(e.target.value, raidProgress.mythic, setRaidMythic)} />\n        </Form.Group>\n      </Form>\n    </>\n  );\n}\n","export const shadowlandsDungeons = [\n    \"De Other Side\",\n    \"Halls of Atonement\",\n    \"Mists of Tirna Scithe\",\n    \"Plaguefall\",\n    \"Sanguine Depths\",\n    \"Spires of Ascenion\",\n    \"The Necrotic Wake\",\n    \"Theater of Pain\",\n];\n\nexport type Dungeon =\n  \"De Other Side\" |\n  \"Halls of Atonement\" |\n  \"Mists of Tirna Scithe\" |\n  \"Plaguefall\" |\n  \"Sanguine Depths\" |\n  \"Spires of Ascenion\" |\n  \"The Necrotic Wake\" |\n  \"Theater of Pain\";\n\nexport interface Character {\n  id: number,\n  name: string,\n  realm: string,\n  region: string,\n  progress: Progress,\n}\n\nexport interface Progress {\n  mythicPlus: MythicPlus[],\n  raid: Raid,\n  weeklyAnima: boolean,\n  weeklyMawSouls: boolean,\n  weeklyVenari: boolean,\n  weeklyBonusEvent: boolean,\n  worldBoss: boolean,\n}\n\nexport interface Raid {\n  lfr: number,\n  normal: number,\n  heroic: number,\n  mythic: number,\n}\n\nexport type RaidDifficulty = keyof Raid;\n\nexport interface MythicPlus {\n  dungeon: Dungeon,\n  level: number,\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { useAppDispatch } from \"../redux/store\";\nimport { Dungeon, shadowlandsDungeons } from \"../model/character\";\nimport {\n  addMythicPlusDungeonRun,\n  deleteMythicPlusDungeonRun,\n} from \"../redux/characters\";\nimport { Progress } from \"../model/character\";\n\ninterface Props {\n  progress: Progress,\n}\n\nexport default function MythicPlusProgress({ progress }: Props) {\n  const dispatch = useAppDispatch();\n  const [dungeon, setDungeon] = useState(\"De Other Side\" as Dungeon);\n  const [level, setLevel] = useState(2);\n  const [addingNewRun, setAddingNewRun] = useState(false);\n  const heading = <h4>Mythic Plus Dungeons</h4>;\n  const tip = <p className=\"mt-sm-3 text-muted\">Tip: Keystone levels 6, 9, 11, 13, and 15 result in the same level of vault rewards as the previous level.</p>;\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (level < 2) {\n      alert(\"Keystone level must be at least 2.\");\n      return;\n    }\n\n    dispatch(addMythicPlusDungeonRun({\n      dungeon,\n      level,\n    }));\n\n    setDungeon(\"De Other Side\" as Dungeon);\n    setLevel(2);\n\n    setAddingNewRun(false);\n  }\n\n  if (addingNewRun || progress.mythicPlus.length < 1) {\n    return (\n      <>\n        {heading}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"mythicPlusDungeon\">\n            <Form.Label>Dungeon</Form.Label>\n            <Form.Control as=\"select\" value={dungeon} onChange={((e) => setDungeon(e.target.value as Dungeon))}>\n              {shadowlandsDungeons.map((d) => {\n                return <option key={d} value={d}>{d}</option>;\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"mythicPlusLevel\">\n            <Form.Label>Keystone level</Form.Label>\n            <Form.Control\n              value={level}\n            onChange={(e) => {\n              const value = parseInt(e.target.value, 10);\n\n              setLevel(isNaN(value) ? 2 : value);\n            }}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">Add M+ dungeon run</Button>\n          {progress.mythicPlus.length > 0 &&\n            <>\n              &nbsp;\n              <Button variant=\"secondary\" type=\"button\" onClick={() => setAddingNewRun(false)}>Cancel</Button>\n            </>\n          }\n        </Form>\n        {tip}\n      </>\n    );\n  }\n\n  const mythicPlusRuns = (\n    <div className=\"table-responsive\">\n      <table className=\"table align-middle\">\n        <thead>\n          <tr>\n            <th>Dungeon</th>\n            <th>Keystone level</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {progress.mythicPlus.map((run, index) => {\n            return (\n              <tr key={index}>\n                <td>{run.dungeon}</td>\n                <td>{run.level}</td>\n                <td><Button variant=\"danger\" size=\"sm\" onClick={() => {\n                  if (window.confirm(\"Are you sure you want to delete this Mythic Plus dungeon run?\")) {\n                    dispatch(deleteMythicPlusDungeonRun(index))\n                  }\n                }}>Delete</Button></td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <Button variant=\"primary\" onClick={() => setAddingNewRun(true)}>Add another M+ dungeon run</Button>\n    </div>\n  );\n\n  return (\n    <>\n      {heading}\n      {mythicPlusRuns}\n      {tip}\n    </>\n  );\n}\n","import { RaidDifficulty } from \"./character\";\n\nexport const rewards: Rewards = {\n  priorities: [\"mythic\", \"heroic\", \"normal\", \"lfr\"],\n  raid: {\n    lfr: {\n      min: 187,\n      max: 194,\n    },\n    normal: {\n      min: 200,\n      max: 207,\n    },\n    heroic: {\n      min: 213,\n      max: 220,\n    },\n    mythic: {\n      min: 226,\n      max: 233,\n    },\n  },\n  mythicPlus: {\n    2: 200,\n    3: 203,\n    4: 207,\n    5: 210,\n    6: 210,\n    7: 213,\n    8: 216,\n    9: 216,\n    10: 220,\n    11: 220,\n    12: 223,\n    13: 223,\n    14: 226,\n    15: 226,\n    maxKeyLevel: 15,\n    maxItemLevel: 226,\n  }\n}\n\nexport const raidDifficultyNames = {\n  lfr: \"LFR\",\n  normal: \"Normal\",\n  heroic: \"Heroic\",\n  mythic: \"Mythic\",\n}\n\ninterface Rewards {\n  priorities: RaidDifficulty[],\n  raid: RaidRewards,\n  mythicPlus: MythicPlusRewards,\n}\n\ninterface RaidRewards {\n  lfr: RaidRewardMinMax,\n  normal: RaidRewardMinMax,\n  heroic: RaidRewardMinMax,\n  mythic: RaidRewardMinMax,\n}\n\ninterface RaidRewardMinMax {\n  min: number,\n  max: number,\n}\n\ninterface MythicPlusRewards {\n  [key: number]: number,\n  maxKeyLevel: number,\n  maxItemLevel: number,\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectProgress } from \"../redux/characters\";\nimport { raidDifficultyNames, rewards } from \"../model/vault\";\n\nexport default function VaultRewards() {\n  const progress = useSelector(selectProgress);\n\n  if (!progress) {\n    return <></>;\n  }\n\n  const raidItemLevel = (n: number) => {\n    const difficulty = rewards.priorities.find((difficulty) => {\n      return progress.raid[difficulty] >= n;\n    });\n\n\n    if (difficulty) {\n      return `${raidDifficultyNames[difficulty]}: Item level ${rewards.raid[difficulty].min}`;\n    } else {\n      return;\n    }\n  };\n\n  const mythicPlusSorted = [...progress.mythicPlus];\n\n  mythicPlusSorted.sort((a, b) => {\n    if (b.level > a.level) {\n      return 1;\n    } else if (a.level > b.level) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n\n  const mythicPlusItemLevel = (n: number) => {\n    if (mythicPlusSorted.length < n) {\n      return;\n    }\n\n    const keyLevel = mythicPlusSorted[n - 1].level;\n    const rewardLevel = keyLevel > rewards.mythicPlus.maxKeyLevel ?\n      rewards.mythicPlus.maxItemLevel :\n      rewards.mythicPlus[keyLevel];\n\n    return `+${keyLevel}: Item level ${rewardLevel}`;\n  };\n\n  const raid3 = raidItemLevel(3);\n  const raid6 = raidItemLevel(6);\n  const raid9 = raidItemLevel(9);\n\n  const mythicPlus1 = mythicPlusItemLevel(1);\n  const mythicPlus4 = mythicPlusItemLevel(4);\n  const mythicPlus10 = mythicPlusItemLevel(10);\n\n  const defaultClassNames = \"col-sm-2 border text-center\";\n  const successClass = \" table-success\";\n\n  const raid3ClassNames = raid3 ? defaultClassNames + successClass : defaultClassNames;\n  const raid6ClassNames = raid6 ? defaultClassNames + successClass : defaultClassNames;\n  const raid9ClassNames = raid9 ? defaultClassNames + successClass : defaultClassNames;\n\n  const mythicPlus1ClassNames = mythicPlus1 ? defaultClassNames + successClass : defaultClassNames;\n  const mythicPlus4ClassNames = mythicPlus4 ? defaultClassNames + successClass : defaultClassNames;\n  const mythicPlus10ClassNames = mythicPlus10 ? defaultClassNames + successClass : defaultClassNames;\n\n  return (\n    <>\n      <h4>The Great Vault</h4>\n\n      <p className=\"text-muted\">The following rewards will be available next week.</p>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col col-sm-1 border-0 text-right\"><strong>Raid</strong></div>\n          <div className={raid3ClassNames}>\n            3 Bosses<br />\n            {raid3 || \"Not yet unlocked\"}\n          </div>\n          <div className={raid6ClassNames}>\n            7 Bosses<br />\n            {raid6 || \"Not yet unlocked\"}\n          </div>\n          <div className={raid9ClassNames}>\n            9 Bosses<br />\n            {raid9 || \"Not yet unlocked\"}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col col-sm-1 border-0 text-right\"><strong>Mythic&nbsp;Plus</strong></div>\n          <div className={mythicPlus1ClassNames}>\n            1 Dungeon<br />\n            {mythicPlus1 || \"Not yet unlocked\"}\n          </div>\n          <div className={mythicPlus4ClassNames}>\n            4 Dungeons<br />\n            {mythicPlus4 || \"Not yet unlocked\"}\n          </div>\n          <div className={mythicPlus10ClassNames}>\n            10 Dungeons<br />\n            {mythicPlus10 || \"Not yet unlocked\"}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","export interface Region {\n  short: string,\n  long: string,\n}\n\nexport const regions: { [key: string]: Region } = {\n  us: {\n    short: \"NA\",\n    long: \"North America\",\n  },\n  eu: {\n    short: \"EU\",\n    long: \"Europe\",\n  },\n  kr: {\n    short: \"KR\",\n    long: \"Korea\",\n  },\n  tw: {\n    short: \"TW\",\n    long: \"Korea\",\n  },\n  cn: {\n    short: \"CN\",\n    long: \"China\",\n  },\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport QuestProgress from \"./QuestProgress\";\nimport RaidProgress from \"./RaidProgress\";\nimport MythicPlusProgress from \"./MythicPlusProgress\";\nimport VaultRewards from \"./VaultRewards\";\nimport {\n  selectCurrentCharacter,\n  selectProgress,\n} from \"../redux/characters\";\nimport { regions } from \"../model/region\";\n\nexport default function CharacterProgress() {\n  const character = useSelector(selectCurrentCharacter);\n  const progress = useSelector(selectProgress);\n\n  if (!(character && progress)) {\n    return <></>;\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <h3 className=\"mb-sm-5\">Weekly progress for {character.name}-{character.realm} ({regions[character.region].long})</h3>\n        </Col>\n      </Row>\n      <Row className=\"mb-sm-5\">\n        <Col>\n          <VaultRewards />\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={2}>\n          <QuestProgress progress={progress} />\n        </Col>\n        <Col sm={3}>\n          <RaidProgress progress={progress} />\n        </Col>\n        <Col sm={3}>\n          <MythicPlusProgress progress={progress} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nexport default function Navigation() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>World of Warcraft Weekly Progress Tracker</Navbar.Brand>\n    </Navbar>\n  );\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { useAppDispatch } from \"../redux/store\";\nimport { addCharacter } from \"../redux/characters\";\nimport { regions } from \"../model/region\";\n\ninterface Props {\n  charactersExist: boolean,\n  setAddingNewCharacter: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function AddCharacter({ charactersExist, setAddingNewCharacter }: Props) {\n  const dispatch = useAppDispatch();\n  const [name, setName] = useState(\"\");\n  const [realm, setRealm] = useState(\"\");\n  const [region, setRegion] = useState(\"us\");\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (name.length < 1 || realm.length < 1) {\n      return;\n    }\n\n    dispatch(addCharacter({\n      name,\n      realm,\n      region,\n    }));\n\n    setName(\"\");\n    setRealm(\"\");\n    setRegion(\"us\");\n\n    setAddingNewCharacter(false);\n  }\n\n  return (\n    <>\n      <p className=\"text-muted\">Add a new character.</p>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Character name</Form.Label>\n          <Form.Control value={name} onChange={(e) => setName(e.target.value)} />\n        </Form.Group>\n        <Form.Group controlId=\"realm\">\n          <Form.Label>Character realm</Form.Label>\n          <Form.Control value={realm} onChange={(e) => setRealm(e.target.value)} />\n        </Form.Group>\n        <Form.Group controlId=\"region\">\n          <Form.Label>Character region</Form.Label>\n          <Form.Control as=\"select\" value={region} onChange={(e) => setRegion(e.target.value)}>\n            {Object.keys(regions).map((regionCode) => {\n              const region = regions[regionCode];\n\n              return <option key={regionCode} value={regionCode}>{region.long}</option>\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">Add character</Button>\n        {charactersExist &&\n          <>\n            &nbsp;\n            <Button variant=\"secondary\" type=\"button\" onClick={() => setAddingNewCharacter(false)}>Cancel</Button>\n          </>\n        }\n      </Form>\n    </>\n  );\n}\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useSelector } from \"react-redux\";\n\nimport { useAppDispatch } from \"../redux/store\";\nimport { chooseCharacter, selectAllCharacters, selectCurrentCharacter } from \"../redux/characters\";\nimport { regions } from \"../model/region\";\n\nexport default function CharacterSelect() {\n  const dispatch = useAppDispatch();\n  const characters = useSelector(selectAllCharacters);\n  const currentCharacter = useSelector(selectCurrentCharacter);\n\n  const charactersContent = characters.map((character) => {\n    return (\n      <option key={character.id} value={character.id}>\n        {`${character.name}-${character.realm} (${regions[character.region].short})`}\n      </option>\n    );\n  });\n\n  const characterSelect = (\n    <>\n      <p className=\"text-muted\">Select a character</p>\n\n      <Form className=\"mb-sm-4\">\n        <Form.Control as=\"select\" value={currentCharacter ? currentCharacter.id : characters[0].id} onChange={(e) => {\n          const id = parseInt(e.target.value, 10);\n\n          if (isNaN(id)) {\n            throw new Error(\"ID of selected character is not a number.\");\n          } else {\n            dispatch(chooseCharacter(id))\n          }\n        }}>\n          {charactersContent}\n        </Form.Control>\n      </Form>\n    </>\n  );\n\n  return (\n    <>\n      <h4>Characters</h4>\n\n      {characters.length > 0 && characterSelect}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { useAppDispatch } from \"../redux/store\";\nimport {\n  deleteAllData,\n  resetAllCharacters,\n  resetCharacter,\n  selectAllCharacters,\n  selectCurrentCharacter,\n} from \"../redux/characters\";\nimport AddCharacter from \"./AddCharacter\";\nimport CharacterSelect from \"./CharacterSelect\";\n\nexport default function Sidebar() {\n  const characters = useSelector(selectAllCharacters);\n  const character = useSelector(selectCurrentCharacter);\n  const dispatch = useAppDispatch();\n  const [addingNewCharacter, setAddingNewCharacter] = useState(false);\n\n  if (addingNewCharacter || characters.length < 1) {\n    return <AddCharacter setAddingNewCharacter={setAddingNewCharacter} charactersExist={characters.length > 0} />;\n  } else {\n    return (\n      <>\n        <CharacterSelect />\n\n        <p className=\"text-muted\">Manage data</p>\n\n        <div className=\"mb-sm-3\">\n          <Button variant=\"primary\" block onClick={() => setAddingNewCharacter(true)}>Add new character</Button>\n        </div>\n\n        {character &&\n          <>\n            <div className=\"mb-sm-3\">\n              <Button variant=\"danger\" block onClick={() => {\n                if (window.confirm(`Are you sure you want to reset all progress for ${character.name}?`)) {\n                  dispatch(resetCharacter())\n                }\n              }}>Reset progress for {character.name}</Button>\n            </div>\n            <div className=\"mb-sm-3\">\n              <Button variant=\"danger\" block onClick={() => {\n                if (window.confirm(\"Are you sure you want to reset all progress for all characters?\")) {\n                  dispatch(resetAllCharacters());\n                }\n              }}>Reset progress for all characters</Button>\n            </div>\n            <div className=\"mb-sm-3\">\n              <Button variant=\"danger\" block onClick={() => {\n                if (window.confirm(\"Are you sure you want to delete all data?\")) {\n                  dispatch(deleteAllData());\n                }\n              }}>Delete all data</Button>\n            </div>\n          </>\n        }\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport CharacterProgress from \"./CharacterProgress\";\nimport Navigation from \"./Navigation\";\nimport Sidebar from \"./Sidebar\";\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n      <div className=\"p-sm-4\">\n        <Container fluid>\n          <Row>\n            <Col xl={2}>\n              <Sidebar />\n            </Col>\n            <Col>\n              <CharacterProgress />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from './components/App';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}